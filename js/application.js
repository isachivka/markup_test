// Generated by CoffeeScript 1.8.0
(function() {
  var ColorsWidget;

  ColorsWidget = (function() {
    var drow, drow_stats, init, l, position, r, to;
    l = 'passive';
    position = 0;
    r = '';
    init = function() {
      return $.ajax('colors.json').done(function(data) {
        var color, _i, _len, _ref;
        _ref = data["colors"];
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          color = _ref[_i];
          drow({
            d: color
          }, '#template', '#colors', 'append');
        }
        $('#colors').wrap('<div id="wrap"></div>');
        $('#colors').before('<div id="count"></div>');
        drow_stats(position + 1);
        $('#count').on('click', 'a', function() {
          if ($(this).hasClass('left')) {
            position -= 1;
          }
          if ($(this).hasClass('right')) {
            position += 1;
          }
          to();
          return false;
        });
        $('#colors').on('swiperight', function() {
          position -= 1;
          return to();
        });
        return $('#colors').on('swipeleft', function() {
          position += 1;
          return to();
        });
      });
    };
    to = function(n) {
      if (position < 0) {
        position = 0;
      }
      if (position > 2) {
        position = 2;
      }
      if (position === 0) {
        l = 'passive';
      } else {
        l = '';
      }
      if (position === 2) {
        r = 'passive';
      } else {
        r = '';
      }
      $('#colors').animate({
        'margin-left': -1 * position * 100 + '%'
      }, 200);
      return drow_stats(position + 1);
    };
    drow_stats = function(n) {
      return drow({
        d: n,
        l: l,
        r: r
      }, '#template1', '#count', 'replace');
    };
    drow = function(data, from, to, v) {
      var template;
      template = $(from).html();
      Mustache.parse(template);
      switch (v) {
        case 'append':
          return $(to).append(Mustache.render(template, data));
        case 'replace':
          return $(to).html(Mustache.render(template, data));
      }
    };
    return init();
  })();

}).call(this);
